using Microsoft.CodeAnalysis;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace WinFormsComInterop.SourceGenerator.Tests
{
    [TestClass]
    public class RuntimeCallableWrapperDispatchTest : CodeGenerationTestBase
    {
        [TestMethod]
        public void DispatchIsDefault()
        {
            string source = @"
namespace Foo
{
    using System.Runtime.InteropServices;

    [Guid(""22DD68D1-86FD-4332-8666-9ABEDEA2D24C"")]
    public interface IStr
    {
        void Read(byte* pv, uint cb, uint* pcbRead);
    }

    [RuntimeCallableWrapper(typeof(IStr))]
    partial class C
    {
    }
}";
            string output = this.GetGeneratedOutput(source, NullableContextOptions.Disable);

            Assert.IsNotNull(output);

            var expectedOutput = @"// <auto-generated>
// Code generated by COM Proxy Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
#nullable enable
using Marshal = System.Runtime.InteropServices.Marshal;

namespace Foo
{
    [System.Runtime.Versioning.SupportedOSPlatform(""windows"")]
    unsafe partial class C : global::Foo.IStr
    {
        void global::Foo.IStr.Read(byte* pv, uint cb, uint* pcbRead)
        {
            var targetInterface = new System.Guid(""22DD68D1-86FD-4332-8666-9ABEDEA2D24C"");
            var result = Marshal.QueryInterface(this.instance, ref targetInterface, out var thisPtr);
            if (result != 0)
            {
                throw new System.InvalidCastException();
            }

            try
            {
                var comDispatch = (System.IntPtr*)thisPtr;
                var vtbl = (System.IntPtr*)comDispatch[0];
                result = ((delegate* unmanaged<System.IntPtr, byte*, uint, uint*, int>)vtbl[7])(thisPtr, pv, cb, pcbRead);
                if (result != 0)
                {
                    Marshal.ThrowExceptionForHR(result);
                }

            }
            finally
            {
                Marshal.Release(thisPtr);
            }
        }
    }
}";
            Assert.AreEqual(expectedOutput, output);
        }
        [TestMethod]
        public void DispatchProperty()
        {
            string source = @"
namespace System.Runtime.InteropServices
{
    [AttributeUsage(AttributeTargets.Parameter | AttributeTargets.Field | AttributeTargets.ReturnValue, Inherited = false)]
    public sealed partial class CustomMarshalAsAttribute : Attribute
    {
        public CustomMarshalAsAttribute(UnmanagedType unmanagedType)
        {
            Value = unmanagedType;
        }
        public CustomMarshalAsAttribute(short unmanagedType)
        {
            Value = (UnmanagedType)unmanagedType;
        }

        public UnmanagedType Value { get; }

        // Fields used with SubType = SafeArray.
        public VarEnum SafeArraySubType;
        public Type? SafeArrayUserDefinedSubType;

        // Field used with iid_is attribute (interface pointers).
        public int IidParameterIndex;

        // Fields used with SubType = ByValArray and LPArray.
        // Array size =  parameter(PI) * PM + C
        public UnmanagedType ArraySubType;
        public short SizeParamIndex;           // param index PI
        public int SizeConst;                // constant C

        // Fields used with SubType = CustomMarshaler
        public string? MarshalType;              // Name of marshaler class
        public Type? MarshalTypeRef;           // Type of marshaler class
        public string? MarshalCookie;            // cookie to pass to marshaler
    }
}

namespace Foo
{
    using System.Runtime.InteropServices;

    [Guid(""22DD68D1-86FD-4332-8666-9ABEDEA2D24C"")]
    public interface IStr
    {
        [DispId(200)]
        object Application { [return: CustomMarshalAs(UnmanagedType.IDispatch)]get; }
    }

    [RuntimeCallableWrapper(typeof(IStr))]
    partial class C
    {
    }
}";
            string output = this.GetGeneratedOutput(source, NullableContextOptions.Disable);

            Assert.IsNotNull(output);

            var expectedOutput = @"// <auto-generated>
// Code generated by COM Proxy Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
#nullable enable
using Marshal = System.Runtime.InteropServices.Marshal;

namespace Foo
{
    [System.Runtime.Versioning.SupportedOSPlatform(""windows"")]
    unsafe partial class C : global::Foo.IStr
    {
        object global::Foo.IStr.Application
        {
            get
            {
                var targetInterface = new System.Guid(""22DD68D1-86FD-4332-8666-9ABEDEA2D24C"");
                var result = Marshal.QueryInterface(this.instance, ref targetInterface, out var thisPtr);
                if (result != 0)
                {
                    throw new System.InvalidCastException();
                }

                try
                {
                    var comDispatch = (System.IntPtr*)thisPtr;
                    var vtbl = (System.IntPtr*)comDispatch[0];
                    System.IntPtr retVal;
                    result = ((delegate* unmanaged<System.IntPtr, System.IntPtr*, int>)vtbl[7])(thisPtr, &retVal);
                    if (result != 0)
                    {
                        Marshal.ThrowExceptionForHR(result);
                    }

                    return retVal == System.IntPtr.Zero ? null : (object)Marshal.GetObjectForIUnknown(retVal);
                }
                finally
                {
                    Marshal.Release(thisPtr);
                }
            }
        }
    }
}";
            Assert.AreEqual(expectedOutput, output);
        }
    }
}
